#include <iostream>

using namespace std;

void insertionSort(int arr[], int n) {
    for (int i = 1; i < n; i++) {
        int key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j = j - 1;
        }
        arr[j + 1] = key;
    }
}


int main() {
    int n;
    cout << "Enter the size of the array: ";
    cin >> n;

    int arr[n];
    cout << "Enter the elements of the array:\n";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    // int lst[n];
    cout<<"sorted           median";
    cout<<endl;
    
    for (int i = 0; i < n; i++){
        int lst[i+1];
        for(int k = 0; k<i+1; k++){
            lst[k] = arr[k];
        }
        
        // sorting the new array lst
         int nn = sizeof(lst) / sizeof(lst[0]);

        insertionSort(lst, nn);
    cout<<"[ ";
    for (int ii = 0; ii <= i; ii++) {
        cout << lst[ii] << " ";
    }
    cout<<"]";
    
    int spaces = 18-3*(i+1);
    for(int jj =0;jj<spaces;jj++){
        cout<< " ";
    }
    //calculating the median
    int len = i+1;
      if ((len)%2 == 0){
        int mid = (len)/2;
        // float m = (lst[len] + lst[len +1])/2.0;
        cout << (lst[len/2] + lst[len/2 -1])/2.0;
        }else{
            cout<< lst[len/2];
        }
        
    
    
    cout << endl;
    
    }
    
    cout << endl;
   
    







    return 0;
}
